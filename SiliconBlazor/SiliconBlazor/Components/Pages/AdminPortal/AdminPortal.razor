@page "/adminportal"
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject ApplicationDbContext DbContext

@if (user == null)
{
    <p>Loading...</p>
}
else
{
    <AuthorizeView>
        <Authorized>
            <div class="container">
                <div class="admin-portal">
                    <aside class="aside">
                        <div class="profile-info">
                            <div class="avatar">
                                <div class="image">
                                    <img src="/Images/uploads/profiles/avatar.png" alt="Profile Avatar" />
                                </div>
                            </div>
                            <h5>@user.FirstName @user.LastName</h5>
                            <p>@user.Email</p>
                        </div>

                        <nav>
                            <NavLink class="btn-theme-s" href="/adminportal"><i class="fa-regular fa-gear"></i>Admin Portal</NavLink>
                            <NavLink class="menu-link" href="/adminportal/administrators"><i class="fa-solid fa-user-tie"></i><span>Administrators</span></NavLink>
                            <NavLink class="menu-link" href="/adminportal/users"><i class="fa-regular fa-user"></i><span>Users</span></NavLink>
                            <NavLink class="menu-link" href="/adminportal/subscribers"><i class="fa-regular fa-envelope"></i><span>Subscribers</span></NavLink>
                            <NavLink class="menu-link" href="/adminportal/courses"> <i class="fa-solid fa-book"></i><span>Courses</span></NavLink>
                            <NavLink class="menu-link" href="/adminportal/chat"><i class="fa-regular fa-comment"></i><span>Chat</span></NavLink>
                        </nav>
                    </aside>
                </div>
            </div>
        </Authorized>
    </AuthorizeView>
}




@code {
    private ApplicationUser user = default!;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        user = await UserManager.GetUserAsync(HttpContext.User);

    }
}
