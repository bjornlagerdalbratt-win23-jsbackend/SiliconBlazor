@inject UserManager<ApplicationUser> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<header>
    <div class="container">
        <NavLink href="/" id="logo"><img class="logotype" src="/Images/Icons/logo.svg" alt="Logotype for Silicon"></NavLink>


        <div id="menu">
            <nav id="mobileMenu" class="mobile-menu">
                <NavLink href="/" class="menu-link">Overview</NavLink>
                <NavLink href="/#features" class="menu-link">Features</NavLink>

                <AuthorizeView>
                    <Authorized>
                        <NavLink href="/courses" class="menu-link">Courses</NavLink>
                    </Authorized>
                </AuthorizeView>

                <NavLink href="/contact" class="menu-link">Contact</NavLink>
            </nav>
        </div>

        <div id="theme-switch" class="btn-switch">
            <label>Light</label>
            <label class="switch" for="switch-mode">
                <input type="checkbox" id="switch-mode" checked="">
                <span class="slider round"></span>
            </label>
            <label>Dark</label>
        </div>

        <div class="account-buttons">
            <AuthorizeView>
                <Authorized>
                    <div class="profile">
                        <div class="profile-image">
                            <NavLink href="/accountdetails">
                                <img src="@ProfileImageUrl" alt="Profile image" />
                            </NavLink>
                        </div>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <a href="/account/login" class="btn-gray"><i class="fa-solid fa-right-to-bracket"></i>Sign in</a>
                    <a href="/account/register" class="btn-theme"><i class="fa-light fa-user-plus"></i>Sign up</a>
                </NotAuthorized>
            </AuthorizeView> 
        </div>

    </div>
</header>

@code {
    private string ProfileImageUrl = "/Images/uploads/profiles/avatar.png";

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = await UserManager.GetUserAsync(authState.User);
        if (user != null && !string.IsNullOrEmpty(user.ProfileImage))
        {
            ProfileImageUrl = user.ProfileImage;
        }
    }
}
